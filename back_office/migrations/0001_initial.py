# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-13 22:57
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interior_number', models.CharField(blank=True, max_length=10, verbose_name='número interior')),
                ('exterior_number', models.CharField(max_length=10, verbose_name='número exterior')),
                ('street', models.CharField(max_length=45, verbose_name='calle')),
                ('town', models.CharField(blank=True, max_length=45, verbose_name='municipio')),
                ('city', models.CharField(blank=True, max_length=45, verbose_name='ciudad')),
                ('state', models.CharField(blank=True, max_length=45, verbose_name='estado')),
                ('country', models.CharField(blank=True, max_length=45, verbose_name='país')),
                ('zip_code', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='El código postal consta de 5 dígitos.', regex='^[0-9]{5}')], verbose_name='CP')),
            ],
            options={
                'verbose_name': 'dirección',
                'verbose_name_plural': 'direcciones',
            },
        ),
        migrations.CreateModel(
            name='BranchOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='nombre de la sucursal')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El número telefónico debe ingresarse con el formato: '+999999999'. Se permiten hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='teléfono')),
                ('website', models.URLField(blank=True, max_length=45, validators=[django.core.validators.URLValidator(message='URL inválida.')], verbose_name='sitio web')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido.')], verbose_name='correo electrónico')),
                ('picture', models.ImageField(blank=True, upload_to='', verbose_name='imagen')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='back_office.Address', verbose_name='dirección')),
            ],
            options={
                'verbose_name': 'sucursal',
                'verbose_name_plural': 'sucursales',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='nombre')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El número telefónico debe ingresarse con el formato: '+999999999'. Se permiten hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='teléfono')),
                ('website', models.URLField(blank=True, max_length=45, validators=[django.core.validators.URLValidator(message='URL inválida.')], verbose_name='sitio web')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido.')], verbose_name='correo electrónico')),
                ('picture', models.ImageField(blank=True, upload_to='', verbose_name='imagen')),
                ('client_since', models.DateField(auto_now_add=True, verbose_name='antigüedad')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='back_office.Address', verbose_name='dirección')),
            ],
            options={
                'verbose_name': 'cliente',
                'verbose_name_plural': 'clientes',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('name', models.CharField(max_length=20, verbose_name='nombre(s)')),
                ('paternal_last_name', models.CharField(max_length=20, verbose_name='apellido paterno')),
                ('maternal_last_name', models.CharField(max_length=20, verbose_name='apellido materno')),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, 'Masculino'), (1, 'Femenino')], verbose_name='género')),
                ('phone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message="El número telefónico debe ingresarse con el formato: '+999999999'. Se permiten hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido.')], verbose_name='correo electrónico')),
                ('picture', models.ImageField(blank=True, upload_to='', verbose_name='imagen de perfil')),
                ('number', models.CharField(max_length=45, primary_key=True, serialize=False, verbose_name='número')),
                ('seniority', models.DateField(default=django.utils.timezone.now, verbose_name='antigüedad')),
                ('is_active', models.BooleanField(default=True, verbose_name='activo')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='back_office.Address', verbose_name='dirección')),
            ],
            options={
                'verbose_name': 'empleado',
                'verbose_name_plural': 'empleados',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='nombre del rol')),
                ('description', models.CharField(max_length=50, verbose_name='descripción del rol')),
            ],
            options={
                'verbose_name': 'rol',
                'verbose_name_plural': 'roles',
            },
        ),
        migrations.AddField(
            model_name='employee',
            name='role',
            field=models.ManyToManyField(to='back_office.EmployeeRole', verbose_name='roles'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuario del sistema'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='administrator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='administrated_branches', to='back_office.Employee', verbose_name='administrador de la sucursal'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='employees',
            field=models.ManyToManyField(blank=True, to='back_office.Employee', verbose_name='empleados de la sucursal'),
        ),
    ]
