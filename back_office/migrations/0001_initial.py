# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-03-05 05:18
from __future__ import unicode_literals

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interior_number', models.CharField(blank=True, max_length=10, verbose_name='No. int.')),
                ('exterior_number', models.CharField(max_length=10, verbose_name='No. ext.')),
                ('street', models.CharField(max_length=45, verbose_name='Calle')),
                ('town', models.CharField(blank=True, max_length=45, verbose_name='Delegación/Municipio')),
                ('city', models.CharField(blank=True, max_length=45, verbose_name='Ciudad')),
                ('state', models.CharField(blank=True, max_length=45, verbose_name='Estado')),
                ('country', models.CharField(blank=True, max_length=45, verbose_name='País')),
                ('zip_code', models.CharField(blank=True, max_length=5, validators=[django.core.validators.RegexValidator(message='El código postal consta de 5 dígitos.', regex='^[0-9]{5}')], verbose_name='CP')),
            ],
            options={
                'verbose_name': 'Dirección',
                'verbose_name_plural': 'Direcciones',
            },
        ),
        migrations.CreateModel(
            name='BranchOffice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Sucursal',
                'verbose_name_plural': 'Sucursales',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_since', models.DateField(auto_now_add=True, verbose_name='Antigüedad')),
            ],
            options={
                'verbose_name': 'Cliente',
                'verbose_name_plural': 'Clientes',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('number', models.CharField(max_length=45, primary_key=True, serialize=False, verbose_name='Número')),
                ('seniority', models.DateField(verbose_name='Antigüedad')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
            ],
            options={
                'verbose_name': 'Empleado',
                'verbose_name_plural': 'Empleados',
            },
        ),
        migrations.CreateModel(
            name='EmployeeRole',
            fields=[
                ('name', models.CharField(choices=[(0, 'Administrador'), (1, 'Ventas telefónicas'), (2, 'Ventas en campo'), (3, 'Instalador'), (4, 'Chofer'), (5, 'Productor de domos'), (6, 'Jefe de almacén')], max_length=20, primary_key=True, serialize=False, verbose_name='Nombre del rol')),
                ('description', models.CharField(max_length=50, verbose_name='Descripción del rol')),
            ],
            options={
                'verbose_name': 'Rol',
                'verbose_name_plural': 'Roles',
            },
        ),
        migrations.CreateModel(
            name='OrganizationProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45, verbose_name='Name')),
                ('phone', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator(message="El número telefónico debe ingresarse con el formato: '+999999999'. Se permiten hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Tel.')),
                ('website', models.URLField(blank=True, max_length=45, validators=[django.core.validators.URLValidator(message='URL inválida.')], verbose_name='Sitio web')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido.')], verbose_name='Correo electrónico')),
                ('picture', models.ImageField(blank=True, upload_to='', verbose_name='Imagen')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='back_office.Address', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Perfil de la organización',
                'verbose_name_plural': 'Perfiles de las organizaciones',
            },
        ),
        migrations.CreateModel(
            name='PersonProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='Nombre(s)')),
                ('paternal_last_name', models.CharField(max_length=20, verbose_name='Apellido paterno')),
                ('maternal_last_name', models.CharField(max_length=20, verbose_name='Apellido materno')),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, 'Masculino'), (1, 'Femenino')], verbose_name='Género')),
                ('phone', models.CharField(blank=True, max_length=14, validators=[django.core.validators.RegexValidator(message="El número telefónico debe ingresarse con el formato: '+999999999'. Se permiten hasta 15 dígitos.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Tel.')),
                ('email', models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator(message='Correo electrónico inválido.')], verbose_name='Correo electrónico')),
                ('picture', models.ImageField(blank=True, upload_to='', verbose_name='Imagen de perfil')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='back_office.Address', verbose_name='Dirección')),
            ],
            options={
                'verbose_name': 'Perfiles individuales',
            },
        ),
        migrations.AddField(
            model_name='organizationprofile',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='back_office.PersonProfile', verbose_name='Persona de contacto'),
        ),
        migrations.AddField(
            model_name='employee',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='back_office.PersonProfile', verbose_name='Datos del empleado'),
        ),
        migrations.AddField(
            model_name='employee',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='back_office.EmployeeRole', verbose_name='Rol'),
        ),
        migrations.AddField(
            model_name='employee',
            name='user',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.AddField(
            model_name='client',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='back_office.OrganizationProfile', verbose_name='Datos del cliente'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='administrator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='administrated_branches', to='back_office.Employee', verbose_name='Administrador de la sucursal'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='employees',
            field=models.ManyToManyField(blank=True, to='back_office.Employee', verbose_name='Empleados de la sucursal'),
        ),
        migrations.AddField(
            model_name='branchoffice',
            name='profile',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='back_office.OrganizationProfile', verbose_name='Datos de la sucursal'),
        ),
    ]
